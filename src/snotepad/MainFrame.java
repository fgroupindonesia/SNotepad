package snotepad;

import images.ImageRef;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JMenuItem;
import javax.swing.JPopupMenu;
import javax.swing.SwingUtilities;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import static sun.jvm.hotspot.HelloWorld.e;

/**
 *
 * @author FGroupIndonesia
 */
public class MainFrame extends javax.swing.JFrame {

    URL resNew = ImageRef.class.getResource("new.png");
    ImageIcon iconNew = new ImageIcon(resNew);

    URL resOpen = ImageRef.class.getResource("open.png");
    ImageIcon iconOpen = new ImageIcon(resOpen);

    URL resSave = ImageRef.class.getResource("save.png");
    ImageIcon iconSave = new ImageIcon(resSave);

    URL resLock = ImageRef.class.getResource("lock.png");
    ImageIcon iconLock = new ImageIcon(resLock);

    URL resUnlock = ImageRef.class.getResource("unlock.png");
    ImageIcon iconUnlock = new ImageIcon(resUnlock);

    URL resSetting = ImageRef.class.getResource("config.png");
    ImageIcon iconSetting = new ImageIcon(resSetting);

    URL resAbout = ImageRef.class.getResource("info.png");
    ImageIcon iconAbout = new ImageIcon(resAbout);

    URL resLogo = ImageRef.class.getResource("logo.png");
    ImageIcon iconLogo = new ImageIcon(resLogo);

    public MainFrame() {
        initComponents();
        setIconImage(iconLogo.getImage());
        applyDefaultToolbar(true);
    }

    private void applyDefaultToolbar(boolean defaultMode) {

        if (defaultMode) {
            btn_lock.setEnabled(false);
            btn_unlock.setEnabled(false);
            btn_save.setEnabled(false);
        } else {
            btn_lock.setEnabled(true);
            btn_unlock.setEnabled(true);
            btn_save.setEnabled(true);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        btn_new = new javax.swing.JButton(iconNew);
        btn_open = new javax.swing.JButton(iconOpen);
        btn_save = new javax.swing.JButton(iconSave);
        jSeparator3 = new javax.swing.JToolBar.Separator();
        btn_lock = new javax.swing.JButton(iconLock);
        btn_unlock = new javax.swing.JButton(iconUnlock);
        jSeparator4 = new javax.swing.JToolBar.Separator();
        btn_settings = new javax.swing.JButton(iconSetting);
        btn_about = new javax.swing.JButton(iconAbout);
        jSeparator5 = new javax.swing.JToolBar.Separator();
        tabbedPanel = new javax.swing.JTabbedPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        menu_new = new javax.swing.JMenuItem();
        menu_open = new javax.swing.JMenuItem();
        menu_save = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        menu_exit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        menu_copy = new javax.swing.JMenuItem();
        menu_paste = new javax.swing.JMenuItem();
        menu_selectall = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        menu_settings = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        menu_increase = new javax.swing.JMenuItem();
        menu_decrease = new javax.swing.JMenuItem();
        menu_wrap = new javax.swing.JMenuItem();
        menu_unlock = new javax.swing.JMenuItem();
        menu_about = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SNotepad");
        setPreferredSize(new java.awt.Dimension(600, 400));

        jToolBar1.setRollover(true);

        btn_new.setText("New");
        btn_new.setFocusable(false);
        btn_new.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_new.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_new.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_newActionPerformed(evt);
            }
        });
        jToolBar1.add(btn_new);

        btn_open.setText("Open");
        btn_open.setFocusable(false);
        btn_open.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_open.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(btn_open);

        btn_save.setText("Save");
        btn_save.setFocusable(false);
        btn_save.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_save.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_saveActionPerformed(evt);
            }
        });
        jToolBar1.add(btn_save);
        jToolBar1.add(jSeparator3);

        btn_lock.setText("Lock");
        btn_lock.setFocusable(false);
        btn_lock.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_lock.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_lock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_lockActionPerformed(evt);
            }
        });
        jToolBar1.add(btn_lock);

        btn_unlock.setText("Unlock");
        btn_unlock.setFocusable(false);
        btn_unlock.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_unlock.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_unlock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_unlockActionPerformed(evt);
            }
        });
        jToolBar1.add(btn_unlock);
        jToolBar1.add(jSeparator4);

        btn_settings.setText("Settings");
        btn_settings.setFocusable(false);
        btn_settings.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_settings.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(btn_settings);

        btn_about.setText("About");
        btn_about.setFocusable(false);
        btn_about.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_about.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_about.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_aboutActionPerformed(evt);
            }
        });
        jToolBar1.add(btn_about);
        jToolBar1.add(jSeparator5);

        getContentPane().add(jToolBar1, java.awt.BorderLayout.PAGE_START);

        tabbedPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabbedPanelMouseClicked(evt);
            }
        });
        getContentPane().add(tabbedPanel, java.awt.BorderLayout.CENTER);

        jMenu1.setMnemonic('F');
        jMenu1.setText("File");

        menu_new.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menu_new.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/new.png"))); // NOI18N
        menu_new.setText("New");
        menu_new.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_newActionPerformed(evt);
            }
        });
        jMenu1.add(menu_new);

        menu_open.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menu_open.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/open.png"))); // NOI18N
        menu_open.setText("Open");
        menu_open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_openActionPerformed(evt);
            }
        });
        jMenu1.add(menu_open);

        menu_save.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menu_save.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/save.png"))); // NOI18N
        menu_save.setText("Save");
        jMenu1.add(menu_save);
        jMenu1.add(jSeparator1);

        menu_exit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_DOWN_MASK));
        menu_exit.setText("Exit");
        jMenu1.add(menu_exit);

        jMenuBar1.add(jMenu1);

        jMenu2.setMnemonic('E');
        jMenu2.setText("Edit");

        menu_copy.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menu_copy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/copy.png"))); // NOI18N
        menu_copy.setText("Copy");
        jMenu2.add(menu_copy);

        menu_paste.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menu_paste.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/paste.png"))); // NOI18N
        menu_paste.setText("Paste");
        jMenu2.add(menu_paste);

        menu_selectall.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menu_selectall.setText("Select All");
        jMenu2.add(menu_selectall);
        jMenu2.add(jSeparator2);

        menu_settings.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menu_settings.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/config.png"))); // NOI18N
        menu_settings.setText("Settings");
        jMenu2.add(menu_settings);

        jMenuBar1.add(jMenu2);

        jMenu3.setMnemonic('V');
        jMenu3.setText("View");

        menu_increase.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_UP, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menu_increase.setText("Increase Font");
        menu_increase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_increaseActionPerformed(evt);
            }
        });
        jMenu3.add(menu_increase);

        menu_decrease.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_DOWN, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menu_decrease.setText("Decrease Font");
        jMenu3.add(menu_decrease);

        menu_wrap.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menu_wrap.setText("Wrap Word");
        jMenu3.add(menu_wrap);

        menu_unlock.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.ALT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menu_unlock.setText("Unlock");
        jMenu3.add(menu_unlock);

        jMenuBar1.add(jMenu3);

        menu_about.setMnemonic('B');
        menu_about.setText("About");
        jMenuBar1.add(menu_about);

        setJMenuBar(jMenuBar1);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void menu_increaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_increaseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_menu_increaseActionPerformed

    private void btn_newActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_newActionPerformed
        addNewTab();
    }//GEN-LAST:event_btn_newActionPerformed

    private void menu_newActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_newActionPerformed
        addNewTab();
    }//GEN-LAST:event_menu_newActionPerformed

    private void menu_openActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_openActionPerformed
        FileFilter filter = new FileNameExtensionFilter("SNotepad File", "snpad");

        JFileChooser jfc = new JFileChooser();
        jfc.setFileFilter(filter);
        jfc.setDialogTitle("Select *.snpad file...");
        jfc.setFileSelectionMode(JFileChooser.FILES_ONLY);

        int retVal = jfc.showOpenDialog(this);

        if (retVal == JFileChooser.APPROVE_OPTION) {
            // selecting file
            // reading content and opening inside the snotepad

        } else {
            // cancel
        }
    }//GEN-LAST:event_menu_openActionPerformed

    private void btn_lockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_lockActionPerformed
        // encrypt text into code
        String n = objTranslator.translateIntoCode(getActivePanel().getOriginalText());
        getActivePanel().setCodeText(n);
        getActivePanel().lock();

    }//GEN-LAST:event_btn_lockActionPerformed

    private void btn_unlockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_unlockActionPerformed
        // decrypting text from code
        String n = objTranslator.translateFromCode(getActivePanel().getCodeText());
        getActivePanel().setOriginalText(n);
        getActivePanel().lock();
    }//GEN-LAST:event_btn_unlockActionPerformed

    private void tabbedPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabbedPanelMouseClicked
        if (SwingUtilities.isRightMouseButton(evt)) {
            showPopupMenu(evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_tabbedPanelMouseClicked

    private void btn_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_saveActionPerformed
        
        getActivePanel().setSavedStatus(true);
        
    }//GEN-LAST:event_btn_saveActionPerformed

    private void btn_aboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_aboutActionPerformed

        showAboutDialog();
    }//GEN-LAST:event_btn_aboutActionPerformed

    private void showAboutDialog(){
        AboutDialog dialog = new AboutDialog(this, true);
        dialog.setVisible(true);
    }
    
    private JPopupMenu popupMenu;

    private void showPopupMenu(int x, int y) {
        popupMenu = new JPopupMenu();

        final int x1 = x;
        final int y1 = y;

        JMenuItem closeTabItem = new JMenuItem("Close This Tab Only");
        closeTabItem.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                int tabIndex = tabbedPanel.indexAtLocation(x1, y1);
                if (tabIndex != -1) {
                    tabbedPanel.remove(tabIndex);
                    applyDefaultToolbarIfAnyTabs();
                }
            }
        });
        popupMenu.add(closeTabItem);

        JMenuItem closeAllTabsItem = new JMenuItem("Close All Tabs");
        closeAllTabsItem.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                tabbedPanel.removeAll();
                applyDefaultToolbarIfAnyTabs();
            }
        });
        popupMenu.add(closeAllTabsItem);

        popupMenu.show(tabbedPanel, x, y);
    }

    private void applyDefaultToolbarIfAnyTabs(){
        if(isAnyTab()){
            applyDefaultToolbar(false);
        }else{
            applyDefaultToolbar(true);
        }
    }
    
    private boolean isAnyTab() {
        if (tabbedPanel.getTabCount() > 0) {
            return true;
        }

        return false;
    }

    private CustomPanel2 getActivePanel() {
        CustomPanel2 panel = (CustomPanel2) tabbedPanel.getSelectedComponent();
        return panel;
    }

    //ArrayList<CustomPanel2> dataPanel = new ArrayList<CustomPanel2>();
    private void addNewTab() {
        // opening lock of toolbar
        applyDefaultToolbar(false);

        // adding new Panel into tabbed panel
        int nomer = tabbedPanel.getTabCount();
        CustomPanel2 panel1 = new CustomPanel2(tabbedPanel, nomer);
        tabbedPanel.add("- new -", panel1);
        //dataPanel.add(panel1);
        
        // switch focus
        showFocusNewTab();
    }
    
    
    
    private void showFocusNewTab(){
        tabbedPanel.setSelectedIndex(tabbedPanel.getTabCount() - 1);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        runMe();
    }

    public static void runMe() {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    private Translator objTranslator = new Translator();

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_about;
    private javax.swing.JButton btn_lock;
    private javax.swing.JButton btn_new;
    private javax.swing.JButton btn_open;
    private javax.swing.JButton btn_save;
    private javax.swing.JButton btn_settings;
    private javax.swing.JButton btn_unlock;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JToolBar.Separator jSeparator4;
    private javax.swing.JToolBar.Separator jSeparator5;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JMenu menu_about;
    private javax.swing.JMenuItem menu_copy;
    private javax.swing.JMenuItem menu_decrease;
    private javax.swing.JMenuItem menu_exit;
    private javax.swing.JMenuItem menu_increase;
    private javax.swing.JMenuItem menu_new;
    private javax.swing.JMenuItem menu_open;
    private javax.swing.JMenuItem menu_paste;
    private javax.swing.JMenuItem menu_save;
    private javax.swing.JMenuItem menu_selectall;
    private javax.swing.JMenuItem menu_settings;
    private javax.swing.JMenuItem menu_unlock;
    private javax.swing.JMenuItem menu_wrap;
    private javax.swing.JTabbedPane tabbedPanel;
    // End of variables declaration//GEN-END:variables
}
